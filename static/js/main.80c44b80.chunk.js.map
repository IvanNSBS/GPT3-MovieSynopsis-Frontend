{"version":3,"sources":["Loading.styles.tsx","Loading.tsx","AppTabs.styles.tsx","AppTabs.tsx","GeneratorFetch.ts","App.styles.tsx","TagSelector.styles.tsx","TagSelector.tsx","App.tsx","index.tsx"],"names":["Text","styled","span","LoadingIcon","AiOutlineLoading3Quarters","TextWrapper","div","LoadingScreen","TabButton","button","props","selected","TabsWrapper","tabsModel","ModelTab","onClick","onCLick","children","AppTabs","useState","setSelected","clickTab","model","showTags","tabIdx","toggleTags","isSelected","idx","console","log","SpecificGenerator","a","undefined","apiKey","postProps","temp","temperature","title","prompt","tagList","tags","length","i","params","onStartGenerating","axios","post","headers","Authorization","then","res","data","onGenerationComplete","choices","text","catch","e","alert","AppContainer","LabelField","InputLabel","label","Output","TitleInput","input","SendButton","TagSelect","Select","value","TagSelector","className","placeholder","filter","obj","includes","options","onChange","values","Array","isArray","map","x","setTags","isMulti","isClearable","App","token","setToken","setApiKey","setTemp","setPrompt","setShowTags","generating","setGenerating","setModel","parseFloat","txt","output","htmlFor","name","type","target","place","effect","id","min","max","step","Loading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80c44b80.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\r\n\r\nconst Text = styled.span`\r\n    user-select: none;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 1.3em;\r\n`\r\n\r\nconst LoadingIcon = styled(AiOutlineLoading3Quarters)`\r\n    width : 1.1em;\r\n    height: 1.1em;\r\n    fill: black;\r\n    animation: loading 4s linear infinite;\r\n    @keyframes loading {\r\n        to { transform: rotate(360deg); }\r\n    }\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    column-gap: 20px;\r\n    width: 100%;\r\n    align-content: flex-start;\r\n    justify-content: center;\r\n    text-align: left;\r\n`\r\n\r\nexport { Text, LoadingIcon, TextWrapper }","import React from \"react\";\r\nimport { TextWrapper, Text, LoadingIcon } from \"./Loading.styles\";\r\n\r\nconst LoadingScreen: React.FC = function() \r\n{\r\n    return (\r\n        <TextWrapper>\r\n            <Text>Generating...</Text>\r\n            <LoadingIcon/>\r\n        </TextWrapper>\r\n    );\r\n}\r\n\r\nexport default LoadingScreen;","import styled from \"styled-components\"\r\n\r\nconst selectedColor = \"#c4c7d1\"\r\nconst unselectedColor = \"white\"\r\n\r\nconst TabButton = styled.button<{selected: boolean}>`\r\n    border: 0px;\r\n    border-top-left-radius: 4px;\r\n    border-top-right-radius: 4px;\r\n    height: 40px;\r\n    width: auto;\r\n    font-size: 1.1em;\r\n    background-color: ${ props => props.selected ? selectedColor : unselectedColor };\r\n\r\n    transition: all 0.2s ease-out;\r\n\r\n    &:hover\r\n    {\r\n        cursor: pointer;\r\n        background-color: #c4c7d1ae;\r\n    }\r\n`;\r\n\r\nconst TabsWrapper = styled.div`\r\n    width: 100%;\r\n    padding-bottom: 20px;\r\n    display: flex;\r\n    align-items: flex-start;\r\n`;\r\n\r\nexport { TabButton, TabsWrapper }","import React, { useState } from \"react\";\r\n\r\nimport {\r\n    TabsWrapper,\r\n    TabButton\r\n} from './AppTabs.styles';\r\n\r\nconst tabsModel = {\r\n    'comedy': \"babbage:ft-ufpe-2021-12-04-17-04-13\",\r\n    'horror': \"babbage:ft-ufpe-2021-12-08-02-32-35\",\r\n    'general': \"curie:ft-ufpe-2021-12-04-00-24-56\"\r\n};\r\n\r\nconst ModelTab: React.FC<{onCLick():void, selected(): boolean}> = function(props)\r\n{     \r\n    return (\r\n        <TabButton selected={props.selected()} onClick={() => props.onCLick()} >{props.children}</TabButton>         \r\n    );\r\n} \r\n\r\nconst AppTabs: React.FC<{onClick(model:string):void, toggleTags(value: boolean):void}> = function(props)\r\n{\r\n    const [selected, setSelected] = useState<number>(0);\r\n\r\n    const clickTab = function (model: string, showTags: boolean, tabIdx: number)\r\n    { \r\n        setSelected(tabIdx);\r\n        props.onClick(model);\r\n        props.toggleTags(showTags);\r\n    }\r\n\r\n    const isSelected = function (idx: number): boolean\r\n    {\r\n        console.log(`is <${idx}> selected? + ${(selected === idx)}`);\r\n        return selected === idx;\r\n    }\r\n\r\n    return (\r\n        <TabsWrapper>\r\n            <ModelTab selected={() => isSelected(0)} onCLick={() => clickTab(tabsModel.comedy, false, 0)}>Comedy</ModelTab>         \r\n            <ModelTab selected={() => isSelected(1)} onCLick={() => clickTab(tabsModel.horror, false, 1)}>Horror</ModelTab>         \r\n            <ModelTab selected={() => isSelected(2)} onCLick={() => clickTab(tabsModel.general, true, 2)}>General</ModelTab>         \r\n        </TabsWrapper>\r\n    )\r\n}\r\n\r\nexport default AppTabs;\r\nexport { tabsModel }","import axios, { AxiosError } from 'axios';\r\nimport { tabsModel } from './AppTabs'\r\n\r\ninterface PostProps\r\n{\r\n    title: string,\r\n    temperature: number,\r\n    tags: string[] | undefined;\r\n}\r\n\r\ninterface GeneratorInterface\r\n{\r\n    model: string;\r\n    apiKey: string | undefined;\r\n    postProps: PostProps;\r\n    onStartGenerating(): void;\r\n    onGenerationComplete(text: string): void\r\n}\r\n\r\nconst url = \"https://api.openai.com/v1/completions\";\r\n\r\nconst SpecificGenerator = async function (props: GeneratorInterface)\r\n{\r\n    if (props.apiKey === undefined)\r\n    {\r\n        console.log(\"No COLAB API key for project. Can't submit a request\")\r\n        return \"\";\r\n    }\r\n    \r\n    const postProps = props.postProps;\r\n    const temp = postProps.temperature;\r\n    const title = postProps.title;\r\n\r\n    let prompt = title + ' ->';\r\n    if (props.model === tabsModel.general)\r\n    {\r\n        let tagList = '';\r\n        if (postProps.tags !== undefined && postProps.tags.length > 0)\r\n        { \r\n            for (let i = 0; i < postProps.tags.length-1; i++)\r\n                tagList += postProps.tags[i] + ', ';\r\n            \r\n            tagList += postProps.tags[postProps.tags.length - 1] + ' ->';\r\n        }\r\n\r\n        prompt = `title=${title}, tags=${tagList}`\r\n        console.log(\"prompt: \"+ prompt);\r\n    }\r\n\r\n    let params = {\r\n        \"prompt\": prompt,\r\n        \"model\": props.model,\r\n        \"max_tokens\": 200,\r\n        \"temperature\": temp,\r\n        \"top_p\": 1,\r\n        \"n\": 1,\r\n        \"stream\": false,\r\n        \"logprobs\": null,\r\n        \"stop\": \"+++\"\r\n    };\r\n    \r\n    props.onStartGenerating();\r\n\r\n    await axios.post(url, params, { headers: { Authorization: props.apiKey}})\r\n    .then(res => {\r\n        console.log(res.data);\r\n        props.onGenerationComplete(res.data.choices[0].text);\r\n    })\r\n    .catch((e: AxiosError) => {\r\n        alert(e);\r\n        props.onGenerationComplete(\"\");\r\n        return \"\";\r\n    })\r\n\r\n    return \"\";\r\n}\r\n\r\nexport { SpecificGenerator }","import styled from \"styled-components\";\r\n\r\nconst AppContainer = styled.div`\r\n    margin-top: 5%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-content: center;\r\n`;\r\n\r\nconst LabelField = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    font-size: 1.3em;\r\n    padding-bottom: 8px;\r\n`;\r\n\r\nconst InputLabel = styled.label`\r\n    margin-right: 25px;\r\n`;\r\n\r\nconst Output = styled.div`\r\n    padding: 20px 5%;\r\n    font-size: 1.5em;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n    width: 340px;\r\n    max-width: 340px;\r\n    padding-left: 10px;\r\n    border: 1px solid #93999e;\r\n    border-radius: 4px;\r\n    height: 38px;\r\n`;\r\n\r\n\r\nconst selectedColor = \"#c4c7d1\"\r\n\r\nconst SendButton = styled.button`\r\n    border: 1px solid gray;\r\n    border-radius: 4px;\r\n    padding: 8px 16px;\r\n    height: 40px;\r\n\r\n    width: auto;\r\n    font-size: 1.1em;\r\n    background-color: white;\r\n\r\n    text-align: center;\r\n    vertical-align: middle;\r\n\r\n    transition: all 0.2s ease-out;\r\n\r\n    &:hover\r\n    {\r\n        cursor: pointer;\r\n        background-color: #c4c7d17b;\r\n    }\r\n\r\n    &:active\r\n    {\r\n        background-color: ${selectedColor}\r\n    }\r\n`;\r\n\r\nexport { AppContainer, LabelField, Output, TitleInput, InputLabel, SendButton }","import styled from \"styled-components\";\r\nimport Select from 'react-select';\r\n\r\nconst TagSelect = styled(Select)`\r\n    user-select: none;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n    width: 350px;\r\n    max-width: 350px;\r\n    margin-bottom: 15px;\r\n`\r\n\r\nexport { TagSelect }","import React, { useState } from \"react\";\r\nimport { TagSelect } from './TagSelector.styles'\r\n\r\n\r\nconst tags = [\r\n    { value: 'flashback', label: 'Flashback'},\r\n    { value: 'romantic', label: 'Romantic'},\r\n    { value: 'cult', label: 'Cult'},\r\n    { value: 'psychedelic', label: 'Pshychedelic'},\r\n    { value: 'suspenseful', label: 'Suspenseful'},\r\n    { value: 'goodversusevil', label: 'Good v Evil' },\r\n    { value: 'action', label: 'Action'},\r\n    { value: 'fantasy', label: 'Fantasy'},\r\n    { value: 'storytelling', label: 'Storytelling'},\r\n    { value: 'psychological', label: 'Psychological'},\r\n    { value: 'historical', label: 'Historical'},\r\n    { value: 'absurd', label: 'Absurd'},\r\n    { value: 'prank', label: 'Prank'},\r\n    { value: 'sentimental', label: 'Sentimental'},\r\n    { value: 'philosophical', label: 'Philosofical'},\r\n    { value: 'avantgarde', label: 'Avantgarde'},\r\n    { value: 'bleak', label: 'Bleak'}\r\n];\r\n\r\nconst TagSelector: React.FC<{setTags(value: string[]): void}> = function (props)\r\n{\r\n    const [selected, setSelected] = useState<string[]>([]);\r\n    const handleChange = function (e: any)\r\n    {\r\n        console.log(e);\r\n\r\n        if (e.length <= 3)\r\n        {\r\n            const values: string[] = Array.isArray(e) ? e.map(x => x.value) : [];\r\n            console.log(values);\r\n            setSelected(values);\r\n            props.setTags(values);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <TagSelect\r\n            className=\"dropdown\"\r\n            placeholder=\"Select Option\"\r\n            value={tags.filter(obj => selected.includes(obj.value))} // set selected values\r\n            options={tags} // set list of the data\r\n            onChange={handleChange} // assign onChange function\r\n            isMulti\r\n            isClearable\r\n        />\r\n    );\r\n}\r\n\r\nexport default TagSelector;","import React, { useState } from \"react\";\nimport LoadingScreen from './Loading';\nimport { SpecificGenerator } from \"./GeneratorFetch\";\n\nimport {\n  AppContainer,\n  InputLabel,\n  LabelField,\n  Output,\n  SendButton,\n  TitleInput,\n} from './App.styles';\n\nimport ReactTooltip from \"react-tooltip\";\nimport AppTabs from \"./AppTabs\";\nimport TagSelector from \"./TagSelector\";\n\nconst App: React.FC = function ()\n{\n  const [token, setToken] = useState(\"\");\n  const [apiKey, setApiKey] = useState<string | undefined>(\"\");\n  \n  const [temp, setTemp] = useState<string>(\"1\");\n  const [prompt, setPrompt] = useState<string>(\"Once upon a time\");\n  const [showTags, setShowTags] = useState<boolean>(false);\n  const [tags, setTags] = useState<string[] | undefined>(undefined);\n\n  const [generating, setGenerating] = useState<number>(-1);\n\n  const [model, setModel] = useState<string>(\"babbage:ft-ufpe-2021-12-04-17-04-13\");\n\n  const post = async function()\n  {\n    const props =\n    {\n      model: model,\n      apiKey: apiKey,\n      postProps: {\n        title: prompt,\n        temperature: parseFloat(temp),\n        tags: showTags ? tags : undefined\n      },\n      onStartGenerating: () => setGenerating(1),\n      onGenerationComplete: (txt: string) => { setToken(txt); setGenerating(0); }\n    }\n\n    SpecificGenerator(props);\n  }\n\n  let output = '';\n  if (generating === 1)\n    output = 'Gerando...'\n  else if (generating === 0)\n    output = token;\n  else\n    output = '';\n  \n  return (\n    <AppContainer>\n      \n      <div>\n        <AppTabs onClick={setModel} toggleTags={setShowTags}/>\n        \n        <LabelField>\n          <InputLabel htmlFor='apikey'>API Key</InputLabel>\n          <TitleInput name='apikey' type='text' value={apiKey} onChange={ e => setApiKey(e.target.value) }/>\n        </LabelField>\n        <LabelField>\n          <InputLabel htmlFor='input-prompt' data-for=\"title\" data-tip=\"Movie Title\">Title</InputLabel>\n          <ReactTooltip place=\"top\" type=\"dark\" effect=\"float\" id=\"title\"/>\n          <TitleInput name='input-prompt' type='text' value={prompt} onChange={ e => setPrompt(e.target.value) }/>\n        </LabelField>\n        { showTags &&\n          <LabelField>\n            <InputLabel htmlFor='tags'>Tags</InputLabel>\n            <TagSelector setTags={setTags}/>\n          </LabelField>\n        }\n        <LabelField>\n          <InputLabel htmlFor='input-temp'>Temperature</InputLabel>\n          <TitleInput name='input-temp' type='range' min='0' max='1' step='0.01' onChange={e => setTemp(e.target.value)} />\n          <label>{ temp }</label>\n        </LabelField>\n    \n      </div>\n\n      <SendButton onClick={post}>Gimme Me A New Oscar</SendButton>\n      \n      <Output>\n        {generating === 1\n          ? <LoadingScreen />\n          : output\n        }\n      </Output>\n\n    </AppContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}